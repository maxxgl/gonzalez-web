{"version":3,"sources":["kurt.js","global-context.js","Movement/movement-container.js","Settings/settings-container.js","Map/mapbox-map-style.js","Map/map-container.js","Traffic/traffic-container.js","Cockpit/cockpit-container.js","App.js","serviceWorker.js","index.js"],"names":["src_kurt","accel","rotation","location","timestamp","log","count","newCount","accelx","x","accely","y","accelz","z","alpha","beta","gamma","xhistory","latitude","longitude","speed","data","yhistory","zhistory","filterXHistory","lowPassX","filterYHistory","lowPassY","filterZHistory","lowPassZ","filter_alpha_history","orthog","low_Pass_alpha","filter_beta_history","low_Pass_beta","filter_gamma_history","low_Pass_gamma","lastAccelx","length","lastAccely","lastAccelz","lastFilterX","lastFilterY","lastFilterZ","Math","pow","last_filter_alpha","last_filter_beta","last_filter_gamma","orthog_plot","alpha_plot","beta_plot","gamma_plot","Context","React","createContext","ContextProvider","state","motion","kurt","counter","paused","alertError","err","alert","JSON","stringify","watcher","lastPosition","_this","setState","coords","motionWatcher","togglePause","togglePrintData","id","Object","assign","show","loop","sample","_sample$motion","_sample$motion$accele","accelerationIncludingGravity","_sample$motion$rotati","rotationRate","_sample$motion$timeSt","timeStamp","_kurt","_kurt2","slicedToArray","out","_arr","keys","_i","k","newEntry","shift","push","concat","toConsumableArray","color","_this2","this","navigator","geolocation","watchPosition","enableHighAccuracy","timeout","maximumAge","window","addEventListener","setInterval","react_default","a","createElement","Provider","value","objectSpread","pause","print","props","children","Component","Movement","_this$context","context","arr","values","map","d","movement_container_Data","key","style","height","movement_container_Chart","filter","v","className","onClick","contextType","Data","_ref","type","checked","onChange","Chart","_ref2","nivo_line_esm","margin","top","bottom","left","right","xScale","yScale","min","max","axisTop","axisRight","axisBottom","enableGridX","colors","scheme","dotSize","dotColor","theme","dotBorderWidth","dotBorderColor","from","animate","textColor","ExampleApp","showModal","toggleModal","float","lib_default","isOpen","onRequestClose","contentLabel","ariaHideApp","customStyles","name","change","zoom","thickness","content","border","boxShadow","overlay","zIndex","mapStyle","version","metadata","mapbox:autocomposite","sources","mapbox","url","sprite","glyphs","layers","paint","background-color","interactive","source","source-layer","fill-color","fill-opacity","line-color","line-width","base","stops","layout","line-cap","line-join","line-dasharray","line-gap-width","minzoom","icon-image","text-offset","text-field","text-font","text-max-width","text-anchor","text-size","icon-size","text-color","text-halo-width","text-halo-color","text-halo-blur","symbol-placement","text-transform","text-letter-spacing","maxzoom","Mapper","viewport","width","updateViewport","componentDidUpdate","prevProps","_this$state$viewport","esm","mapboxApiAccessToken","onViewportChange","map_container_PositionMarkers","positions","PositionMarkers","p","i","Traffic","currentSpeed","freeFlowSpeed","getRouteData","_callee","params","response","regenerator_default","wrap","_context","prev","next","URL","point","unit","forEach","searchParams","append","fetch","sent","json","t0","abrupt","flowSegmentData","console","coordinates","coordinate","stop","handleChange","e","defineProperty","target","_this$context2","_this$state","Fragment","settings_container_ExampleApp","toFixed","getTime","map_container_Mapper","Date","getHours","getMinutes","getSeconds","cockpit_container","Consumer","cockpit_container_Display","Display","_kurt$orthog_plot","_kurt$speed","speedValue","orthogValue","nivo_pie_esm","label","startAngle","endAngle","fit","innerRadius","padAngle","cornerRadius","enableRadialLabels","enableSlicesLabels","isInteractive","defs","background","fill","match","src_App","react_router_dom","exact","to","react_router","path","component","Cockpit","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","global_context_ContextProvider","document","getElementById","process","href","origin","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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AU,CACNC,WAAY,OACZC,YAAa,SAEjB9E,OAAU,CACN,MACA,CACI,KACA,QACA,cAEJ,CACI,MACA,CACI,KACA,QACA,gBACA,SACA,iBACA,UACA,QACA,aACA,OACA,QAEJ,CACI,KACA,YACA,YAIZO,KAAQ,OACR6D,OAAU,SACVjI,GAAM,eACN8H,MAAS,CACLO,aAAc,UACdC,aAAc,CACVC,KAAQ,KACRC,MAAS,CACL,CACI,EACA,KAEJ,CACI,GACA,MAIZI,iBAAkB,CACd,IACA,MAGRV,eAAgB,QAEpB,CACIF,aAAe,EACfS,OAAU,CACNC,WAAY,OACZC,YAAa,SAEjB9E,OAAU,CACN,MACA,CACI,KACA,QACA,cAEJ,CACI,MACA,CACI,KACA,QACA,WACA,UACA,YACA,WACA,SAEJ,CACI,KACA,YACA,YAIZO,KAAQ,OACR6D,OAAU,SACVjI,GAAM,eACN8H,MAAS,CACLO,aAAc,OACdC,aAAc,CACVC,KAAQ,IACRC,MAAS,CACL,CACI,EACA,IAEJ,CACI,GACA,MAIZI,iBAAkB,CACd,IACA,MAGRV,eAAgB,QAEpB,CACIF,aAAe,EACfS,OAAU,CACNC,WAAY,QACZC,YAAa,SAEjB9E,OAAU,CACN,MACA,CACI,KACA,QACA,cAEJ,CACI,MACA,CACI,KACA,QACA,gBACA,SACA,iBACA,UACA,QACA,aACA,OACA,QAEJ,CACI,KACA,YACA,OACA,UAIZO,KAAQ,OACR6D,OAAU,SACVjI,GAAM,aACN8H,MAAS,CACLO,aAAc,UACdC,aAAc,CACVC,KAAQ,KACRC,MAAS,CACL,CACI,EACA,KAEJ,CACI,GACA,OAKhBN,eAAgB,QAEpB,CACIF,aAAe,EACfS,OAAU,CACNC,WAAY,QACZC,YAAa,SAEjB9E,OAAU,CACN,MACA,CACI,KACA,QACA,cAEJ,CACI,MACA,CACI,KACA,QACA,WACA,UACA,YACA,WACA,SAEJ,CACI,KACA,YACA,OACA,UAIZO,KAAQ,OACR6D,OAAU,SACVjI,GAAM,aACN8H,MAAS,CACLO,aAAc,OACdC,aAAc,CACVC,KAAQ,IACRC,MAAS,CACL,CACI,EACA,IAEJ,CACI,GACA,OAKhBN,eAAgB,QAEpB,CACIF,aAAe,EACfS,OAAU,CACNC,WAAY,OACZC,YAAa,SAEjB9E,OAAU,CACN,MACA,CACI,KACA,QACA,cAEJ,CACI,MACA,CACI,KACA,QACA,gBACA,SACA,iBACA,UACA,QACA,aACA,OACA,QAEJ,CACI,KACA,YACA,YAIZO,KAAQ,OACR6D,OAAU,SACVjI,GAAM,oBACN8H,MAAS,CACLO,aAAc,UACdC,aAAc,CACVC,KAAQ,IACRC,MAAS,CACL,CACI,GACA,IAEJ,CACI,GACA,MAIZK,iBAAkB,CACdN,KAAQ,KACRC,MAAS,CACL,CACI,EACA,KAEJ,CACI,GACA,OAKhBN,eAAgB,QAEpB,CACIF,aAAe,EACfS,OAAU,CACNC,WAAY,OACZC,YAAa,SAEjB9E,OAAU,CACN,MACA,CACI,KACA,QACA,cAEJ,CACI,MACA,CACI,KACA,QACA,WACA,UACA,YACA,WACA,SAEJ,CACI,KACA,YACA,YAIZO,KAAQ,OACR6D,OAAU,SACVjI,GAAM,oBACN8H,MAAS,CACLO,aAAc,UACdC,aAAc,CACVC,KAAQ,IACRC,MAAS,CACL,CACI,GACA,IAEJ,CACI,GACA,MAIZK,iBAAkB,CACdN,KAAQ,KACRC,MAAS,CACL,CACI,EACA,KAEJ,CACI,GACA,OAKhBN,eAAgB,QAEpB,CACIF,aAAe,EACfS,OAAU,CACNC,WAAY,QACZC,YAAa,SAEjB9E,OAAU,CACN,MACA,CACI,KACA,QACA,cAEJ,CACI,MACA,CACI,KACA,QACA,gBACA,SACA,iBACA,UACA,QACA,aACA,OACA,QAEJ,CACI,KACA,YACA,YAIZO,KAAQ,OACR6D,OAAU,SACVjI,GAAM,eACN8H,MAAS,CACLO,aAAc,UACdC,aAAc,CACVC,KAAQ,KACRC,MAAS,CACL,CACI,EACA,KAEJ,CACI,GACA,OAKhBN,eAAgB,QAEpB,CACIF,aAAe,EACfS,OAAU,CACNC,WAAY,QACZC,YAAa,SAEjB9E,OAAU,CACN,MACA,CACI,KACA,QACA,cAEJ,CACI,MACA,CACI,KACA,QACA,WACA,UACA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","file":"static/js/main.7fb96356.chunk.js","sourcesContent":["/* eslint-disable */\n/*\n* @param accel: Object with new acceleration data, shape: { x: int, y: int, z: int }\n* @param timestap: timestamp of data point event trigger\n* @param log: Historical output objects, shape: { key: { x: time, y: value } }\n* @param counter: int\n*/\nexport default function(accel, rotation, location, timestamp, log, count) {\n//accelx... are defined\n//log.x,y,z,\n//timestamp available\n\n  let newCount = [(count[0] || 0) + 0.1]\n  if (newCount[0] > 10) {\n    newCount[0] = 0\n  }\n\n  let accelx = accel.x || 0\n  let accely = accel.y || 0\n  let accelz = accel.z || 0\n  let alpha = rotation.alpha\n  let beta = rotation.beta\n  let gamma = rotation.gamma\n  let latitude = location.latitude\n  let longitude = location.longitude\n  let speed = location.speed\n\n  // Destructure of historical data\n  const xhistory = (log.x || { data: [] }).data // Array of past 'x' values ({ x: time, y: value })\n  const yhistory = (log.y || { data: [] }).data // Array of past 'y' values ({ x: time, y: value })\n  const zhistory = (log.z || { data: [] }).data // Arraz of past 'y' values ({ x: time, y: value })\n  \n  const filterXHistory = (log.lowPassX || { data: [] }).data\n  const filterYHistory = (log.lowPassY || { data: [] }).data\n  const filterZHistory = (log.lowPassZ || { data: [] }).data\n  \n  const orthoghistory = (log.orthog || { data: [] }).data\n  \n  const alpha_history = (log.alpha || { data: [] }).data\n  const filter_alpha_history = (log.low_Pass_alpha || { data: [] }).data\n  const beta_history = (log.beta || { data: [] }).data\n  const filter_beta_history = (log.low_Pass_beta || { data: [] }).data\n  const gamma_history = (log.gamma || { data: [] }).data\n  const filter_gamma_history = (log.low_Pass_gamma || { data: [] }).data\n\n  // array access\n  const lastAccelx = xhistory[xhistory.length - 1] || { x: 0, y: 0 } // most recent data of 'x'\n  let lastxTime = lastAccelx.x\n  let lastxValue = lastAccelx.y\n  \n  const lastAccely = yhistory[yhistory.length - 1] || { x: 0, y: 0 } // most recent data of 'x'\n  let lastyTime = lastAccely.x\n  let lastyValue = lastAccely.y\n  \n  const lastAccelz = zhistory[zhistory.length - 1] || { x: 0, y: 0 } // most recent data of 'x'\n  let lastzTime = lastAccelz.x\n  let lastzValue = lastAccelz.y\n\n  // low pass filter\n  const lastFilterX = filterXHistory[filterXHistory.length - 1] || { x: 0, y: 0 }\n  const lowPassX = (accelx - lastFilterX.y) * 0.1 + lastFilterX.y\n  const lastFilterY = filterYHistory[filterYHistory.length - 1] || { x: 0, y: 0 }\n  const lowPassY = (accely - lastFilterY.y) * 0.1 + lastFilterY.y\n  const lastFilterZ = filterZHistory[filterZHistory.length - 1] || { x: 0, y: 0 }\n  const lowPassZ = (accelz - lastFilterZ.y) * 0.1 + lastFilterZ.y\n\n  let orthog = Math.pow((Math.pow(lowPassX, 2) + Math.pow(lowPassY, 2) + Math.pow(lowPassZ, 2)) , 0.5)\n  \n  const last_filter_alpha = filter_alpha_history[filter_alpha_history.length - 1] || { x: 0, y: 0 }\n  const low_Pass_alpha = (alpha - last_filter_alpha.y) * 0.1 + last_filter_alpha.y\n  const last_filter_beta = filter_beta_history[filter_beta_history.length - 1] || { x: 0, y: 0 }\n  const low_Pass_beta = (beta - last_filter_beta.y) * 0.1 + last_filter_beta.y\n  const last_filter_gamma = filter_gamma_history[filter_gamma_history.length - 1] || { x: 0, y: 0 }\n  const low_Pass_gamma = (gamma - last_filter_gamma.y) * 0.1 + last_filter_gamma.y\n  \n  // plotting gains and offsets\n  let orthog_plot = (orthog - 9.81) * 10\n  let alpha_plot = low_Pass_alpha/10\n  let beta_plot = low_Pass_beta/10\n  let gamma_plot = low_Pass_gamma/10\n\n  return [\n    {\n      accelx,\n      accely,\n      accelz,\n      orthog_plot,\n      newCount,\n      lowPassX,\n      lowPassY,\n      lowPassZ,\n      alpha,\n      alpha_plot,\n      beta,\n      beta_plot,\n      gamma,\n      gamma_plot,\n    },\n    newCount,\n  ]\n\n}\n","import React from 'react';\nimport kurt from './kurt'\n\nexport const Context = React.createContext();\n\nexport default class ContextProvider extends React.Component {\n  state = {\n    latitude: null,\n    longitude: null,\n    speed: null,\n    motion: {},\n    kurt: {},\n    counter: [],\n    paused: false,\n  }\n\n  componentDidMount() {\n    let options = { enableHighAccuracy: true, timeout: 20000, maximumAge: 0 }\n    navigator.geolocation.watchPosition(this.watcher, this.alertError, options);\n    window.addEventListener('devicemotion', this.motionWatcher, true);\n    setInterval(() => this.loop(this.state), 30);\n  }\n\n  alertError = err => alert(JSON.stringify(err));\n  watcher = lastPosition => this.setState({ \n    latitude: lastPosition.coords.latitude,\n    longitude: lastPosition.coords.longitude,\n    speed: lastPosition.coords.speed,\n  })\n  motionWatcher = motion => this.setState({ motion })\n\n  togglePause = () => this.setState({ paused: !this.state.paused })\n\n  togglePrintData = id => {\n    const data = Object.assign({}, this.state.kurt)\n    data[id].show = !data[id].show\n    this.setState({ kurt: data })\n  }\n\n  loop = sample => {\n    if (sample.paused) return\n    const data = Object.assign({}, sample.kurt)\n    const {\n      accelerationIncludingGravity = {},\n      rotationRate = {},\n      timeStamp = 0,\n    } = sample.motion\n    const accel = accelerationIncludingGravity\n    const location = {\n      latitude: sample.latitude,\n      longitude: sample.longitude,\n      speed: sample.speed,\n    }\n\n    const [out, counter] = kurt(accel, rotationRate, location, timeStamp, data, sample.counter)\n\n    for (let k of Object.keys(out)) {\n      const newEntry = { x: timeStamp, y: out[k] }\n      if (data[k]) {\n        if (data[k].data.length > 75) {\n          data[k].data.shift()\n          data[k].data.push(newEntry)\n        } else {\n          data[k].data = [...data[k].data, newEntry]\n        }\n      } else {\n        data[k] = { id: k, data: [newEntry], color: 'red', show: false }\n      }\n    }\n\n    this.setState({ kurt: data, counter: counter })\n  }\n\n  render() {\n    return (\n      <Context.Provider\n        value={{\n          ...this.state,\n          pause: this.togglePause,\n          print: this.togglePrintData,\n        }}\n      >\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n","import React from 'react'\nimport './movement-style.css'\nimport { Context } from '../global-context';\nimport { ResponsiveLine } from '@nivo/line'\n\nexport default class Movement extends React.Component {\n  static contextType = Context\n\n  render() {\n    const { kurt, pause, paused, print } = this.context\n    const arr = Object.values(kurt)\n    return (\n      <div>\n        {arr.map(d => <Data key={d.id} {...d} print={print} />)}\n        <div style={{ height: '70vh' }}>\n          <Chart data={arr.filter(v => v.show)} />\n        </div>\n        <button className=\"btn btn-float\" onClick={pause}>\n          {paused ? 'PLAY' : 'PAUSE'}\n        </button>\n      </div>\n    )\n  }\n}\n\nconst Data = ({ id, data, show, print }) => (\n  <div className={\"movement-datafield\" + (show ? \" active\" : \"\")}>\n    <div>{id}: </div>\n    <div>{data[data.length - 1].y}</div>\n    <label className=\"switch\">\n      <input type=\"checkbox\"\n        checked={show}\n        onChange={() => print(id)}\n      />\n      <span className=\"slider round\"></span>\n    </label>\n  </div>\n)\n\nconst Chart = ({ data }) => (\n  <ResponsiveLine\n    data={data}\n    margin={{\n      \"top\": 25,\n      \"bottom\": 10,\n      \"left\": 30,\n      \"right\": 20,\n    }}\n    xScale={{\n      \"type\": \"point\"\n    }}\n    yScale={{\n      \"type\": \"linear\",\n      \"min\": 15,\n      \"max\": -15,\n    }}\n    axisTop={null}\n    axisRight={null}\n    axisBottom={null}\n    enableGridX={false}\n    colors={{ \"scheme\": \"paired\" }}\n    dotSize={1}\n    dotColor={{ \"theme\": \"background\" }}\n    dotBorderWidth={2}\n    dotBorderColor={{ \"from\": \"color\" }}\n    animate={false}\n    theme={{ textColor: '#eee' }}\n  />\n)\n","import React, { Component } from 'react';\nimport Modal from 'react-modal';\n\nexport default class ExampleApp extends Component {\n  state = { showModal: false };\n    \n  toggleModal = () => this.setState({ showModal: !this.state.showModal })\n  \n  render () {\n    return (\n      <div>\n        <button\n          className=\"btn btn-small\"\n          onClick={this.toggleModal}\n          style={{ float: 'right' }}\n        >\n          Ø\n        </button>\n        <Modal \n           isOpen={this.state.showModal}\n           onRequestClose={this.toggleModal}\n           contentLabel=\"Settings Page\"\n           ariaHideApp={false}\n           style={customStyles}\n        >\n          <div className=\"modal-header\">\n            <h2>Settings</h2>\n            <button\n              className=\"btn btn-small\"\n              onClick={this.toggleModal}\n            >\n              X\n            </button>\n          </div>\n          <div className='modal-content'>\n            <label>\n              Style:\n              <input\n                type=\"text\"\n                name=\"style\"\n                onChange={this.props.change}\n                value={this.props.style}\n              />\n            </label>\n            <label>\n              Zoom:\n              <input\n                type=\"number\"\n                name=\"zoom\"\n                onChange={this.props.change}\n                value={this.props.zoom}\n                min={0}\n                max={22}\n              />\n            </label>\n            <label>\n              Thickness:\n              <input\n                type=\"number\"\n                name=\"thickness\"\n                onChange={this.props.change}\n                value={this.props.thickness}\n                min={1}\n                max={20}\n              />\n            </label>\n            <br /><br />\n            <button\n              className=\"btn btn-float\"\n              onClick={this.toggleModal}\n            >\n              Done\n            </button>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst customStyles = {\n  content : {\n    border: 'none',\n    boxShadow: '0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)',\n  },\n  overlay: {\n    zIndex: 3,\n  }\n};\n","const mapStyle = {\n    \"version\": 8,\n    \"name\": \"Basic\",\n    \"metadata\": {\n        \"mapbox:autocomposite\": true\n    },\n    \"sources\": {\n        \"mapbox\": {\n            \"url\": \"mapbox://mapbox.mapbox-streets-v7\",\n            \"type\": \"vector\"\n        }\n    },\n    \"sprite\": \"mapbox://sprites/mapbox/basic-v8\",\n    \"glyphs\": \"mapbox://fonts/mapbox/{fontstack}/{range}.pbf\",\n    \"layers\": [\n        {\n            \"id\": \"background\",\n            \"type\": \"background\",\n            \"paint\": {\n                \"background-color\": \"#dedede\"\n            },\n            \"interactive\": true\n        },\n        {\n            \"id\": \"landuse_overlay_national_park\",\n            \"type\": \"fill\",\n            \"source\": \"mapbox\",\n            \"source-layer\": \"landuse_overlay\",\n            \"filter\": [\n                \"==\",\n                \"class\",\n                \"national_park\"\n            ],\n            \"paint\": {\n                \"fill-color\": \"#d2edae\",\n                \"fill-opacity\": 0.75\n            },\n            \"interactive\": true\n        },\n        {\n            \"id\": \"landuse_park\",\n            \"type\": \"fill\",\n            \"source\": \"mapbox\",\n            \"source-layer\": \"landuse\",\n            \"filter\": [\n                \"==\",\n                \"class\",\n                \"park\"\n            ],\n            \"paint\": {\n                \"fill-color\": \"#d2edae\"\n            },\n            \"interactive\": true\n        },\n        {\n            \"id\": \"waterway\",\n            \"type\": \"line\",\n            \"source\": \"mapbox\",\n            \"source-layer\": \"waterway\",\n            \"filter\": [\n                \"all\",\n                [\n                    \"==\",\n                    \"$type\",\n                    \"LineString\"\n                ],\n                [\n                    \"in\",\n                    \"class\",\n                    \"river\",\n                    \"canal\"\n                ]\n            ],\n            \"paint\": {\n                \"line-color\": \"#a0cfdf\",\n                \"line-width\": {\n                    \"base\": 1.4,\n                    \"stops\": [\n                        [\n                            8,\n                            0.5\n                        ],\n                        [\n                            20,\n                            15\n                        ]\n                    ]\n                }\n            },\n            \"interactive\": true\n        },\n        {\n            \"id\": \"water\",\n            \"type\": \"fill\",\n            \"source\": \"mapbox\",\n            \"source-layer\": \"water\",\n            \"paint\": {\n                \"fill-color\": \"#a0cfdf\"\n            },\n            \"interactive\": true\n        },\n        {\n            \"id\": \"building\",\n            \"type\": \"fill\",\n            \"source\": \"mapbox\",\n            \"source-layer\": \"building\",\n            \"paint\": {\n                \"fill-color\": \"#d6d6d6\"\n            },\n            \"interactive\": true\n        },\n        {\n            \"interactive\": true,\n            \"layout\": {\n                \"line-cap\": \"butt\",\n                \"line-join\": \"miter\"\n            },\n            \"filter\": [\n                \"all\",\n                [\n                    \"==\",\n                    \"$type\",\n                    \"LineString\"\n                ],\n                [\n                    \"all\",\n                    [\n                        \"in\",\n                        \"class\",\n                        \"motorway_link\",\n                        \"street\",\n                        \"street_limited\",\n                        \"service\",\n                        \"track\",\n                        \"pedestrian\",\n                        \"path\",\n                        \"link\"\n                    ],\n                    [\n                        \"==\",\n                        \"structure\",\n                        \"tunnel\"\n                    ]\n                ]\n            ],\n            \"type\": \"line\",\n            \"source\": \"mapbox\",\n            \"id\": \"tunnel_minor\",\n            \"paint\": {\n                \"line-color\": \"#efefef\",\n                \"line-width\": {\n                    \"base\": 1.55,\n                    \"stops\": [\n                        [\n                            4,\n                            0.25\n                        ],\n                        [\n                            20,\n                            30\n                        ]\n                    ]\n                },\n                \"line-dasharray\": [\n                    0.36,\n                    0.18\n                ]\n            },\n            \"source-layer\": \"road\"\n        },\n        {\n            \"interactive\": true,\n            \"layout\": {\n                \"line-cap\": \"butt\",\n                \"line-join\": \"miter\"\n            },\n            \"filter\": [\n                \"all\",\n                [\n                    \"==\",\n                    \"$type\",\n                    \"LineString\"\n                ],\n                [\n                    \"all\",\n                    [\n                        \"in\",\n                        \"class\",\n                        \"motorway\",\n                        \"primary\",\n                        \"secondary\",\n                        \"tertiary\",\n                        \"trunk\"\n                    ],\n                    [\n                        \"==\",\n                        \"structure\",\n                        \"tunnel\"\n                    ]\n                ]\n            ],\n            \"type\": \"line\",\n            \"source\": \"mapbox\",\n            \"id\": \"tunnel_major\",\n            \"paint\": {\n                \"line-color\": \"#fff\",\n                \"line-width\": {\n                    \"base\": 1.4,\n                    \"stops\": [\n                        [\n                            6,\n                            0.5\n                        ],\n                        [\n                            20,\n                            30\n                        ]\n                    ]\n                },\n                \"line-dasharray\": [\n                    0.28,\n                    0.14\n                ]\n            },\n            \"source-layer\": \"road\"\n        },\n        {\n            \"interactive\": true,\n            \"layout\": {\n                \"line-cap\": \"round\",\n                \"line-join\": \"round\"\n            },\n            \"filter\": [\n                \"all\",\n                [\n                    \"==\",\n                    \"$type\",\n                    \"LineString\"\n                ],\n                [\n                    \"all\",\n                    [\n                        \"in\",\n                        \"class\",\n                        \"motorway_link\",\n                        \"street\",\n                        \"street_limited\",\n                        \"service\",\n                        \"track\",\n                        \"pedestrian\",\n                        \"path\",\n                        \"link\"\n                    ],\n                    [\n                        \"in\",\n                        \"structure\",\n                        \"none\",\n                        \"ford\"\n                    ]\n                ]\n            ],\n            \"type\": \"line\",\n            \"source\": \"mapbox\",\n            \"id\": \"road_minor\",\n            \"paint\": {\n                \"line-color\": \"#efefef\",\n                \"line-width\": {\n                    \"base\": 1.55,\n                    \"stops\": [\n                        [\n                            4,\n                            0.25\n                        ],\n                        [\n                            20,\n                            30\n                        ]\n                    ]\n                }\n            },\n            \"source-layer\": \"road\"\n        },\n        {\n            \"interactive\": true,\n            \"layout\": {\n                \"line-cap\": \"round\",\n                \"line-join\": \"round\"\n            },\n            \"filter\": [\n                \"all\",\n                [\n                    \"==\",\n                    \"$type\",\n                    \"LineString\"\n                ],\n                [\n                    \"all\",\n                    [\n                        \"in\",\n                        \"class\",\n                        \"motorway\",\n                        \"primary\",\n                        \"secondary\",\n                        \"tertiary\",\n                        \"trunk\"\n                    ],\n                    [\n                        \"in\",\n                        \"structure\",\n                        \"none\",\n                        \"ford\"\n                    ]\n                ]\n            ],\n            \"type\": \"line\",\n            \"source\": \"mapbox\",\n            \"id\": \"road_major\",\n            \"paint\": {\n                \"line-color\": \"#fff\",\n                \"line-width\": {\n                    \"base\": 1.4,\n                    \"stops\": [\n                        [\n                            6,\n                            0.5\n                        ],\n                        [\n                            20,\n                            30\n                        ]\n                    ]\n                }\n            },\n            \"source-layer\": \"road\"\n        },\n        {\n            \"interactive\": true,\n            \"layout\": {\n                \"line-cap\": \"butt\",\n                \"line-join\": \"miter\"\n            },\n            \"filter\": [\n                \"all\",\n                [\n                    \"==\",\n                    \"$type\",\n                    \"LineString\"\n                ],\n                [\n                    \"all\",\n                    [\n                        \"in\",\n                        \"class\",\n                        \"motorway_link\",\n                        \"street\",\n                        \"street_limited\",\n                        \"service\",\n                        \"track\",\n                        \"pedestrian\",\n                        \"path\",\n                        \"link\"\n                    ],\n                    [\n                        \"==\",\n                        \"structure\",\n                        \"bridge\"\n                    ]\n                ]\n            ],\n            \"type\": \"line\",\n            \"source\": \"mapbox\",\n            \"id\": \"bridge_minor case\",\n            \"paint\": {\n                \"line-color\": \"#dedede\",\n                \"line-width\": {\n                    \"base\": 1.6,\n                    \"stops\": [\n                        [\n                            12,\n                            0.5\n                        ],\n                        [\n                            20,\n                            10\n                        ]\n                    ]\n                },\n                \"line-gap-width\": {\n                    \"base\": 1.55,\n                    \"stops\": [\n                        [\n                            4,\n                            0.25\n                        ],\n                        [\n                            20,\n                            30\n                        ]\n                    ]\n                }\n            },\n            \"source-layer\": \"road\"\n        },\n        {\n            \"interactive\": true,\n            \"layout\": {\n                \"line-cap\": \"butt\",\n                \"line-join\": \"miter\"\n            },\n            \"filter\": [\n                \"all\",\n                [\n                    \"==\",\n                    \"$type\",\n                    \"LineString\"\n                ],\n                [\n                    \"all\",\n                    [\n                        \"in\",\n                        \"class\",\n                        \"motorway\",\n                        \"primary\",\n                        \"secondary\",\n                        \"tertiary\",\n                        \"trunk\"\n                    ],\n                    [\n                        \"==\",\n                        \"structure\",\n                        \"bridge\"\n                    ]\n                ]\n            ],\n            \"type\": \"line\",\n            \"source\": \"mapbox\",\n            \"id\": \"bridge_major case\",\n            \"paint\": {\n                \"line-color\": \"#dedede\",\n                \"line-width\": {\n                    \"base\": 1.6,\n                    \"stops\": [\n                        [\n                            12,\n                            0.5\n                        ],\n                        [\n                            20,\n                            10\n                        ]\n                    ]\n                },\n                \"line-gap-width\": {\n                    \"base\": 1.55,\n                    \"stops\": [\n                        [\n                            4,\n                            0.25\n                        ],\n                        [\n                            20,\n                            30\n                        ]\n                    ]\n                }\n            },\n            \"source-layer\": \"road\"\n        },\n        {\n            \"interactive\": true,\n            \"layout\": {\n                \"line-cap\": \"round\",\n                \"line-join\": \"round\"\n            },\n            \"filter\": [\n                \"all\",\n                [\n                    \"==\",\n                    \"$type\",\n                    \"LineString\"\n                ],\n                [\n                    \"all\",\n                    [\n                        \"in\",\n                        \"class\",\n                        \"motorway_link\",\n                        \"street\",\n                        \"street_limited\",\n                        \"service\",\n                        \"track\",\n                        \"pedestrian\",\n                        \"path\",\n                        \"link\"\n                    ],\n                    [\n                        \"==\",\n                        \"structure\",\n                        \"bridge\"\n                    ]\n                ]\n            ],\n            \"type\": \"line\",\n            \"source\": \"mapbox\",\n            \"id\": \"bridge_minor\",\n            \"paint\": {\n                \"line-color\": \"#efefef\",\n                \"line-width\": {\n                    \"base\": 1.55,\n                    \"stops\": [\n                        [\n                            4,\n                            0.25\n                        ],\n                        [\n                            20,\n                            30\n                        ]\n                    ]\n                }\n            },\n            \"source-layer\": \"road\"\n        },\n        {\n            \"interactive\": true,\n            \"layout\": {\n                \"line-cap\": \"round\",\n                \"line-join\": \"round\"\n            },\n            \"filter\": [\n                \"all\",\n                [\n                    \"==\",\n                    \"$type\",\n                    \"LineString\"\n                ],\n                [\n                    \"all\",\n                    [\n                        \"in\",\n                        \"class\",\n                        \"motorway\",\n                        \"primary\",\n                        \"secondary\",\n                        \"tertiary\",\n                        \"trunk\"\n                    ],\n                    [\n                        \"==\",\n                        \"structure\",\n                        \"bridge\"\n                    ]\n                ]\n            ],\n            \"type\": \"line\",\n            \"source\": \"mapbox\",\n            \"id\": \"bridge_major\",\n            \"paint\": {\n                \"line-color\": \"#fff\",\n                \"line-width\": {\n                    \"base\": 1.4,\n                    \"stops\": [\n                        [\n                            6,\n                            0.5\n                        ],\n                        [\n                            20,\n                            30\n                        ]\n                    ]\n                }\n            },\n            \"source-layer\": \"road\"\n        },\n        {\n            \"interactive\": true,\n            \"layout\": {\n                \"line-cap\": \"round\",\n                \"line-join\": \"round\"\n            },\n            \"filter\": [\n                \"all\",\n                [\n                    \"==\",\n                    \"$type\",\n                    \"LineString\"\n                ],\n                [\n                    \"all\",\n                    [\n                        \"<=\",\n                        \"admin_level\",\n                        2\n                    ],\n                    [\n                        \"==\",\n                        \"maritime\",\n                        0\n                    ]\n                ]\n            ],\n            \"type\": \"line\",\n            \"source\": \"mapbox\",\n            \"id\": \"admin_country\",\n            \"paint\": {\n                \"line-color\": \"#8b8a8a\",\n                \"line-width\": {\n                    \"base\": 1.3,\n                    \"stops\": [\n                        [\n                            3,\n                            0.5\n                        ],\n                        [\n                            22,\n                            15\n                        ]\n                    ]\n                }\n            },\n            \"source-layer\": \"admin\"\n        },\n        {\n            \"interactive\": true,\n            \"minzoom\": 5,\n            \"layout\": {\n                \"icon-image\": \"{maki}-11\",\n                \"text-offset\": [\n                    0,\n                    0.5\n                ],\n                \"text-field\": \"{name_en}\",\n                \"text-font\": [\n                    \"Open Sans Semibold\",\n                    \"Arial Unicode MS Bold\"\n                ],\n                \"text-max-width\": 8,\n                \"text-anchor\": \"top\",\n                \"text-size\": 11,\n                \"icon-size\": 1\n            },\n            \"filter\": [\n                \"all\",\n                [\n                    \"==\",\n                    \"$type\",\n                    \"Point\"\n                ],\n                [\n                    \"all\",\n                    [\n                        \"==\",\n                        \"scalerank\",\n                        1\n                    ],\n                    [\n                        \"==\",\n                        \"localrank\",\n                        1\n                    ]\n                ]\n            ],\n            \"type\": \"symbol\",\n            \"source\": \"mapbox\",\n            \"id\": \"poi_label\",\n            \"paint\": {\n                \"text-color\": \"#666\",\n                \"text-halo-width\": 1,\n                \"text-halo-color\": \"rgba(255,255,255,0.75)\",\n                \"text-halo-blur\": 1\n            },\n            \"source-layer\": \"poi_label\"\n        },\n        {\n            \"interactive\": true,\n            \"layout\": {\n                \"symbol-placement\": \"line\",\n                \"text-field\": \"{name_en}\",\n                \"text-font\": [\n                    \"Open Sans Semibold\",\n                    \"Arial Unicode MS Bold\"\n                ],\n                \"text-transform\": \"uppercase\",\n                \"text-letter-spacing\": 0.1,\n                \"text-size\": {\n                    \"base\": 1.4,\n                    \"stops\": [\n                        [\n                            10,\n                            8\n                        ],\n                        [\n                            20,\n                            14\n                        ]\n                    ]\n                }\n            },\n            \"filter\": [\n                \"all\",\n                [\n                    \"==\",\n                    \"$type\",\n                    \"LineString\"\n                ],\n                [\n                    \"in\",\n                    \"class\",\n                    \"motorway\",\n                    \"primary\",\n                    \"secondary\",\n                    \"tertiary\",\n                    \"trunk\"\n                ]\n            ],\n            \"type\": \"symbol\",\n            \"source\": \"mapbox\",\n            \"id\": \"road_major_label\",\n            \"paint\": {\n                \"text-color\": \"#666\",\n                \"text-halo-color\": \"rgba(255,255,255,0.75)\",\n                \"text-halo-width\": 2\n            },\n            \"source-layer\": \"road_label\"\n        },\n        {\n            \"interactive\": true,\n            \"minzoom\": 8,\n            \"layout\": {\n                \"text-field\": \"{name_en}\",\n                \"text-font\": [\n                    \"Open Sans Semibold\",\n                    \"Arial Unicode MS Bold\"\n                ],\n                \"text-max-width\": 6,\n                \"text-size\": {\n                    \"stops\": [\n                        [\n                            6,\n                            12\n                        ],\n                        [\n                            12,\n                            16\n                        ]\n                    ]\n                }\n            },\n            \"filter\": [\n                \"all\",\n                [\n                    \"==\",\n                    \"$type\",\n                    \"Point\"\n                ],\n                [\n                    \"in\",\n                    \"type\",\n                    \"town\",\n                    \"village\",\n                    \"hamlet\",\n                    \"suburb\",\n                    \"neighbourhood\",\n                    \"island\"\n                ]\n            ],\n            \"type\": \"symbol\",\n            \"source\": \"mapbox\",\n            \"id\": \"place_label_other\",\n            \"paint\": {\n                \"text-color\": \"#666\",\n                \"text-halo-color\": \"rgba(255,255,255,0.75)\",\n                \"text-halo-width\": 1,\n                \"text-halo-blur\": 1\n            },\n            \"source-layer\": \"place_label\"\n        },\n        {\n            \"interactive\": true,\n            \"layout\": {\n                \"text-field\": \"{name_en}\",\n                \"text-font\": [\n                    \"Open Sans Bold\",\n                    \"Arial Unicode MS Bold\"\n                ],\n                \"text-max-width\": 10,\n                \"text-size\": {\n                    \"stops\": [\n                        [\n                            3,\n                            12\n                        ],\n                        [\n                            8,\n                            16\n                        ]\n                    ]\n                }\n            },\n            \"maxzoom\": 16,\n            \"filter\": [\n                \"all\",\n                [\n                    \"==\",\n                    \"$type\",\n                    \"Point\"\n                ],\n                [\n                    \"==\",\n                    \"type\",\n                    \"city\"\n                ]\n            ],\n            \"type\": \"symbol\",\n            \"source\": \"mapbox\",\n            \"id\": \"place_label_city\",\n            \"paint\": {\n                \"text-color\": \"#666\",\n                \"text-halo-color\": \"rgba(255,255,255,0.75)\",\n                \"text-halo-width\": 1,\n                \"text-halo-blur\": 1\n            },\n            \"source-layer\": \"place_label\"\n        },\n        {\n            \"interactive\": true,\n            \"layout\": {\n                \"text-field\": \"{name_en}\",\n                \"text-font\": [\n                    \"Open Sans Regular\",\n                    \"Arial Unicode MS Regular\"\n                ],\n                \"text-max-width\": 10,\n                \"text-size\": {\n                    \"stops\": [\n                        [\n                            3,\n                            14\n                        ],\n                        [\n                            8,\n                            22\n                        ]\n                    ]\n                }\n            },\n            \"maxzoom\": 12,\n            \"filter\": [\n                \"==\",\n                \"$type\",\n                \"Point\"\n            ],\n            \"type\": \"symbol\",\n            \"source\": \"mapbox\",\n            \"id\": \"country_label\",\n            \"paint\": {\n                \"text-color\": \"#666\",\n                \"text-halo-color\": \"rgba(255,255,255,0.75)\",\n                \"text-halo-width\": 1,\n                \"text-halo-blur\": 1\n            },\n            \"source-layer\": \"country_label\"\n        }\n    ]\n}\n\nexport default mapStyle\n","import React, { Component } from 'react';\nimport './map-style.css'\nimport ReactMapGL, {\n  Marker,\n  NavigationControl,\n} from 'react-map-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport mapStyle from './mapbox-map-style'\n\nexport default class Mapper extends Component {\n  state = {\n    viewport: {\n      width: \"100%\",\n      height: \"calc(100vh - 22em)\",\n      zoom: 12,\n      latitude: this.props.latitude,\n      longitude: this.props.longitude,\n    },\n  }\n\n  updateViewport = viewport => this.setState({ viewport })\n\n  componentDidUpdate = (prevProps) => {\n    if (this.props !== prevProps) {\n      this.setState({ ...this.props })\n    }\n  }\n\n  render() {\n    const { latitude, longitude } = this.state.viewport\n    return (\n      <ReactMapGL\n        {...this.state.viewport}\n        mapStyle={mapStyle}\n        latitude={latitude}\n        longitude={longitude}\n        mapboxApiAccessToken=\"pk.eyJ1IjoibWF4eGdsIiwiYSI6ImNqcDlwaHh5cTJkMW8zcG8xNnZkY2Ezd24ifQ.mot4rsPMMBORpbTmYfDIGA\"\n        onViewportChange={this.updateViewport}\n      >\n        <Marker\n          latitude={this.props.latitude}\n          longitude={this.props.longitude}\n        >\n          <span className=\"map-marker\">x</span>\n        </Marker>\n        <PositionMarkers positions={this.props.positions || []} />\n        <div className='map-nav'>\n          <NavigationControl onViewportChange={this.updateViewport} />\n        </div>\n      </ReactMapGL>\n    );\n  }\n}\n\nconst PositionMarkers = ({ positions }) => positions.map((p, i) => (\n  <Marker key={i} latitude={p.latitude} longitude={p.longitude}>\n    <span className=\"position-marker\">x</span>\n  </Marker>\n))\n","import React, { Component } from 'react';\nimport './traffic-style.css';\nimport { Context } from '../global-context';\nimport Settings from '../Settings'\nimport Map from '../Map'\n\nexport default class Traffic extends Component {\n  static contextType = Context\n  state = {\n    currentSpeed: 0,\n    freeFlowSpeed: 0,\n    positions: [],\n    style: 'absolute',\n    zoom: 10,\n    thickness: 10,\n  }\n\n  getRouteData = async () => {\n    const { latitude, longitude } = this.context\n    let url = new URL(`https://api.tomtom.com/traffic/services/4/flowSegmentData/${this.state.style}/${this.state.zoom}/json`)\n    let params = {\n      point: `${latitude},${longitude}`,\n      unit: \"KMPH\",\n      thickness: this.state.thickness,\n      key: \"tRlSZmuvt4DL39zFXSnxEIYGunG3z89u\",\n    }\n    Object.keys(params)\n      .forEach(key => url.searchParams.append(key, params[key]))\n\n    let data = {}\n    try {\n      const response = await fetch(url)\n      data = await response.json()\n    } catch(err) {\n      alert(err);\n      return\n    }\n    if (!data.flowSegmentData) {\n      alert(\"Request Error\", data)\n      return\n    }\n\n    console.log(data)\n    this.setState({\n      currentSpeed: data.flowSegmentData.currentSpeed,\n      freeFlowSpeed: data.flowSegmentData.freeFlowSpeed,\n      positions: data.flowSegmentData.coordinates.coordinate,\n    })\n  }\n\n  handleChange = e => this.setState({ [e.target.name]: e.target.value })\n\n  render() {\n    const { latitude, longitude, speed } = this.context\n    const {\n      currentSpeed,\n      freeFlowSpeed,\n      style,\n      zoom,\n      thickness,\n    } = this.state\n\n    if (!latitude || !longitude) {\n      return <div>Loading...</div>\n    }\n\n    return (\n      <React.Fragment>\n        <div className=\"traffic-data\">\n          <Settings\n            style={style}\n            zoom={zoom}\n            thickness={thickness}\n            change={this.handleChange}\n          />\n          <div className=\"data-box\">\n            <div>Current Speed: {currentSpeed}</div>\n            <div>Freeflow Speed: {freeFlowSpeed}</div>\n            <div>Device Speed: {(speed || 0).toFixed(1)}</div>\n            <div>Time: {getTime()}</div>\n          </div>\n          <button className=\"btn btn-float\" onClick={this.getRouteData}>\n            Get Traffic Data\n          </button>\n        </div>\n        <Map\n          latitude={latitude}\n          longitude={longitude}\n          positions={this.state.positions}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nconst getTime = () => {\n  const d = new Date();\n  return `${d.getHours()}:${d.getMinutes()}.${d.getSeconds()}`\n}\n","import React from 'react'\nimport './cockpit-style.css'\nimport { Context } from '../global-context';\nimport { ResponsivePie } from '@nivo/pie'\n\nexport default (props) => (\n  <Context.Consumer>\n    {({ kurt }) => <Display kurt={kurt} />}\n  </Context.Consumer>\n)\n\nconst Display = ({ kurt }) => {\n  const {\n    orthog_plot = { data: [{ y: 0 }] },\n    speed = { data: [{ y: 0 }] },\n    // alpha = { data: [{ y: 0 }] },\n    // beta = { data: [{ y: 0 }] },\n    // gamma = { data: [{ y: 0 }] },\n  } = kurt\n\n  const speedValue = (speed.data[speed.data.length - 1].y * 3.6).toFixed(1)\n  const orthogValue = orthog_plot.data[orthog_plot.data.length - 1].y\n\n  return (\n    <div>\n      <div className=\"pie-wrapper\">\n        <ResponsivePie\n          data={[\n            {\n              id: \"speed\",\n              label: \"speed\",\n              value: speedValue,\n            },\n            {\n              id: \"neg-speed\",\n              label: \"\",\n              value: (180 - speedValue),\n            },\n          ]}\n          startAngle={-90}\n          endAngle={90}\n          fit={true}\n          margin={{ \"top\": 25, \"bottom\": 0, \"left\": 30, \"right\": 20, }}\n          innerRadius={.75}\n          padAngle={0.7}\n          cornerRadius={3}\n          colors={{ \"scheme\": \"paired\" }}\n          enableRadialLabels={false}\n          enableSlicesLabels={false}\n          isInteractive={false}\n          animate={false}\n          defs={[\n            {\n              id: 'neg',\n              type: 'patternDots',\n              background: \"rgba(255, 255, 255, .25)\",\n              color: \"transparent\",\n            }\n          ]}\n          fill={[\n            {\n              match: { id: 'neg-speed' },\n              id: 'neg'\n            },\n          ]}\n        />\n        <div className=\"readouts\">Speed: {speedValue} km/h</div>\n      </div>\n      <div className=\"pie-wrapper\">\n        <ResponsivePie\n          data={[\n            {\n              id: \"speed\",\n              label: \"speed\",\n              value: orthogValue,\n            },\n            {\n              id: \"neg-speed\",\n              label: \"\",\n              value: (30 - orthogValue),\n            },\n          ]}\n          startAngle={-90}\n          endAngle={90}\n          fit={true}\n          margin={{ \"top\": 25, \"bottom\": 10, \"left\": 30, \"right\": 20, }}\n          innerRadius={.75}\n          padAngle={0.7}\n          cornerRadius={3}\n          colors={{ \"scheme\": \"nivo\" }}\n          enableRadialLabels={false}\n          enableSlicesLabels={false}\n          isInteractive={false}\n          animate={false}\n          defs={[\n            {\n              id: 'neg',\n              type: 'patternDots',\n              background: \"transparent\",\n              color: \"transparent\",\n            }\n          ]}\n          fill={[\n            {\n              match: { id: 'neg-speed' },\n              id: 'neg'\n            },\n          ]}\n        />\n        <div className=\"readouts\">\n          Acceleration: {(orthogValue / 9.8).toFixed(1)}g\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport './App.css';\nimport Movement from './Movement'\nimport Traffic from './Traffic'\nimport Cockpit from './Cockpit'\nimport { NavLink, Switch, Route } from \"react-router-dom\";\n\nexport default () => {\n  return (\n    <div className=\"App\">\n      <header>\n        <nav>\n          <NavLink exact to=\"/\">Traffic Flow</NavLink>\n          <NavLink to=\"/movement\">Movement</NavLink>\n          <NavLink to=\"/cockpit\">Cockpit</NavLink>\n        </nav>\n      </header>\n      <main>\n        <Switch>\n          <Route path=\"/movement\" component={Movement} />\n          <Route path=\"/cockpit\" component={Cockpit} />\n          <Route path=\"/\" component={Traffic} />\n        </Switch>\n      </main>\n    </div>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\nimport ContextProvider from './global-context';\n\nconst Root = () => (\n  <ContextProvider>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </ContextProvider>\n)\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}